
SCHEMA ifcpc;


USE FROM IFC4 (
        IfcCartesianPointList,
        IfcColourSpecification,
        IfcElement,
        IfcGeometricRepresentationItem,
        IfcGrid,
        IfcLabel,
        IfcLengthMeasure,
        IfcNormalisedRatioMeasure,
        IfcParameterValue,
        IfcRectangularTrimmedSurface,
        IfcColourRGBList,
        IfcPointOnSurface
        
        -- this should be in the official IFC4, but it is not. Filed bug report June 2015
        -- IfcDirectionList
);


TYPE IfcPointCloudCoordinateSelect = SELECT
    (IfcCartesianPointList3D
    ,IfcParameterValueList
    ,IfcGridOffsetList);
END_TYPE;

ENTITY IfcDiscreteNormalizedRatioMeasureList
 ABSTRACT SUPERTYPE OF (ONEOF(IfcDiscreteColourRGBList, IfcDiscreteDirectionList));
    Values      : LIST [1:?] OF LIST [3:3] OF INTEGER;
    SampleWidth : LIST [3:3] OF INTEGER;
END_ENTITY;

ENTITY IfcDirectionList
	SUBTYPE OF (IfcGeometricRepresentationItem);
	DirectionList	: 	LIST [1:?] OF LIST [3:3] OF IfcParameterValue;
END_ENTITY;

ENTITY IfcDiscreteColourRGBList
 SUBTYPE OF (IfcDiscreteNormalizedRatioMeasureList);
END_ENTITY;

ENTITY IfcDiscreteDirectionList
 SUBTYPE OF (IfcDiscreteNormalizedRatioMeasureList);
END_ENTITY;

ENTITY IfcParameterValueList
 ABSTRACT SUPERTYPE OF (ONEOF(IfcContinuousParameterValueList, IfcDiscreteParameterValueList))
 SUBTYPE OF (IfcGeometricRepresentationItem);
    WMinOffset : IfcLengthMeasure;
    WMaxOffset : IfcLengthMeasure;
    Surface    : IfcRectangularTrimmedSurface;
END_ENTITY;

ENTITY IfcContinuousParameterValueList
 SUBTYPE OF (IfcParameterValueList);
    Values : LIST [1:?] OF LIST [3:3] OF IfcParameterValue;
END_ENTITY;

ENTITY IfcDiscreteParameterValueList
 SUBTYPE OF (IfcParameterValueList);
    Values       : LIST [1:?] OF LIST [3:3] OF INTEGER;
    USampleWidth : INTEGER;
    VSampleWidth : INTEGER;
    WSampleWidth : INTEGER;
 WHERE
    WR1 : SIZEOF(QUERY(UVW <* SELF\IfcDiscreteParameterValueList.Values | ((UVW[0] < 0) OR (UVW[1] < 0) OR (UVW[2] < 0) OR (UVW[0] > USampleWidth) OR (UVW[1] >= VSampleWidth) OR (UVW[2] >= WSampleWidth)))) == 0;
END_ENTITY;

TYPE IfcPointCloudAttribute = SELECT
    (IfcColourRGBList,
     IfcDiscreteColourRGBList,
     IfcDirectionList,
     IfcDiscreteDirectionList);
END_TYPE;

ENTITY IfcPointCloud
 SUBTYPE OF (IfcGeometricRepresentationItem);
    LevelOfDetail : OPTIONAL IfcLabel;
    Coordinates   : IfcPointCloudCoordinateSelect;
    Attributes    : LIST [0:?] OF IfcPointCloudAttribute;
 WHERE
    -- All attributes in vector have same number of elements as coordinates
    WR1 : QUERY(Attr <* SELF\IfcPointCloud.Attributes | ((('IFC2X3.IFCCARTESIANPOINTLIST3D' IN TYPEOF(SELF\IfcPointCloud.Coordinates)) AND SIZEOF(Coordinates.CoordList) <> SIZEOF(Attr)) OR
                                                         (('IFC2X3.IFCPARAMETERVALUELIST' IN TYPEOF(SELF\IfcPointCloud.Coordinates)) AND SIZEOF(Coordinates.Values) <> SIZEOF(Attr)) OR  
                                                         (('IFC2X3.IFCGRIDOFFSETLIST' IN TYPEOF(SELF\IfcPointCloud.Coordinates)) AND (SIZEOF(Coordinates.Offsets) * SIZEOF(Coordinates.Offsets[0])) <> SIZEOF(Attr)))) == 0;
END_ENTITY;

TYPE IfcGridSelect = SELECT 
	(IfcSurfaceGrid,
	 IfcGrid);
END_TYPE;

ENTITY IfcSurfaceGrid
  SUBTYPE OF (IfcGeometricRepresentationItem);
  	Location: IfcPointOnSurface;
  	USpacing: IfcParameterValue;
  	VSpacing: IfcParameterValue;
  	NumUAxes: INTEGER;
  	NumVAxes: INTEGER;
END_ENTITY;

ENTITY IfcGridOffsetList
 ABSTRACT SUPERTYPE OF (ONEOF(IfcContinuousGridOffsetList, IfcDiscreteGridOffsetList))
 SUBTYPE OF (IfcGeometricRepresentationItem);
    Grid                : IfcGridSelect;
    MinOrthogonalOffset : IfcLengthMeasure; 
    MaxOrthogonalOffset : IfcLengthMeasure;
    CoverageMask        : OPTIONAL LIST [1:?] OF LIST [1:?] OF BOOLEAN;
END_ENTITY;

ENTITY IfcContinuousGridOffsetList
 SUBTYPE OF (IfcGridOffsetList);
    Offsets             : LIST [1:?] OF LIST [1:?] OF IfcParameterValue;
 WHERE
    -- Same dims as CoverageMask
    WR1 : NOT(EXISTS(CoverageMask)) OR (QUERY(Temp1 <* Offsets | SIZEOF(Temp1)) == QUERY(Temp2 <* CoverageMask | SIZEOF(Temp2)));
    -- Rectangular grid:
    WR2 : SIZEOF(QUERY(Row <* Offsets | SIZEOF(Row) == SIZEOF(Offsets[0]))) == 0;
    -- Same dims as grid
    WR3 : ((NOT('IFC2X3.IFCSURFACEGRID' IN TYPEOF(Grid)) OR ((Grid.NumUAxes == SIZEOF(Offsets[0])) AND (Grid.NumVAxes == SIZEOF(Offsets)))) AND
           (NOT('IFC2X3.IFCGRID' IN TYPEOF(Grid)) OR ((SIZEOF(Grid.UAxes) == SIZEOF(Offsets[0])) AND (SIZEOF(Grid.VAxes) == SIZEOF(Offsets)) AND (SIZEOF(Grid.WAxes) == 0))));
END_ENTITY;

ENTITY IfcDiscreteGridOffsetList
 SUBTYPE OF (IfcGridOffsetList);
    Offsets             : LIST [1:?] OF LIST [1:?] OF INTEGER;
    SampleWidth         : INTEGER;
 WHERE
    -- Same dims as CoverageMask
    WR1 : NOT(EXISTS(CoverageMask)) OR (QUERY(Temp1 <* Offsets | SIZEOF(Temp1)) == QUERY(Temp2 <* CoverageMask | SIZEOF(Temp2)));
    -- Rectangular grid:
    WR2 : SIZEOF(QUERY(Row <* Offsets | SIZEOF(Row) == SIZEOF(Offsets[0]))) == 0;
    -- Same dims as grid, if IfcGrid -> 2d (no WAxes)
    WR3 : ((NOT('IFC2X3.IFCSURFACEGRID' IN TYPEOF(Grid)) OR ((Grid.NumUAxes == SIZEOF(Offsets[0])) AND (Grid.NumVAxes == SIZEOF(Offsets)))) AND
           (NOT('IFC2X3.IFCGRID' IN TYPEOF(Grid)) OR ((SIZEOF(Grid.UAxes) == SIZEOF(Offsets[0])) AND (SIZEOF(Grid.VAxes) == SIZEOF(Offsets)) AND (NOT(EXISTS(Grid.WAxes))))));
    -- Within in [0, SampleWidth]
    WR4 : SIZEOF(QUERY(Temp <* Offsets | QUERY(W <* Temp | ((W < 0) OR (W > SampleWidth))))) == 0;
END_ENTITY;

ENTITY IfcPointCloudElement
 SUBTYPE OF (IfcElement);
-- TODO: Metadata a la E57 are attached through respective PSet_PointCloudCommon
END_ENTITY;
   
END_SCHEMA;