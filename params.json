{"name":"IfcPointCloud","tagline":"A point cloud schema extension for the IFC model","body":"# IfcPointCloud\r\n\r\n![IFC model with associated point clouds](https://raw.githubusercontent.com/DURAARK/IFCPointCloud/master/schema/ExpressG/ifc_pc_association.png)\r\n\r\nIn this repository an extension to the Industry Foundation Classes schema is introduced with the capabilities to efficiently describe and store point cloud data. The repository contains schemas, prototype tools and documentation.\r\n\r\nThe prototype tool is capable of associating external point clouds and describing them parametrically according to IFC building surfaces. As such, a unified format of IFC building data is obtained that represents point cloud data more efficiently than prevalent point cloud formats. The decomposition and association between the two data sources enriches the semantics of both. The point clouds are labelled with the building elements they describe and can be navigated according to the spatial subdivision structure of IFC. IFC building elements obtain an additional detailed representation that describes surface characteristics and the exact as-built physical form.\r\n\r\nA binary serialization is introduced that writes IFC files (with or without point clouds) in an efficient hierarchical structure for efficient partial retrieval. This binary serialization format is based on ISO-13030-26 and uses the HDF5 file format.\r\n\r\n# Schema extension\r\n\r\n![The main elements of the proposed schema extension](https://raw.githubusercontent.com/DURAARK/IFCPointCloud/master/schema/ExpressG/schema_main.png)\r\n\r\nIn this image the main entities are listed that have been added to the schema in order to enable semantically rich point cloud segments to be stored alongside IFC building elements.\r\n\r\n# HDF5 serialization\r\n\r\nFor efficient binary serialization and deserialization of files up and over gigabytes in size, a new serialization format for IFC is proposed analogous to ISO 10303-26. Based on HDF5, an open standard embraced by established scientific institutions. An example of a dataset opened in a general purpose HDF5 viewer is shown below. The self-documentation nature of HDF5 allows for inspection and analysis of the data using general purpose tools. The hierarchical binary nature allows for constant-time retrieval of specific entity instances, regardless of the size of the model.\r\n\r\n![General purpose HDF5 viewer inspecting and IFC + Point cloud dataset](https://raw.githubusercontent.com/DURAARK/IFCPointCloud/master/schema/ExpressG/HDFViewHaus30.png)\r\n\r\n# Point cloud compression\r\n\r\nThe schema extension embraces state of the art point cloud compression techniques that can be layered to obtain optimal compression ratios. Floating point values can be discretized using scaled integers and three dimensional point clouds can be stored as one dimensional height-maps relative to IFC building element surfaces. Furthermore general purpose HDF5 compression can be applied to further reduce the size of the data without impacting semantic detail and ease of use.\r\n\r\n![Three dimensional point cloud, compressed as a one dimensional heightmap](https://raw.githubusercontent.com/DURAARK/IFCPointCloud/master/schema/ExpressG/point_cloud_interpolation.png)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}